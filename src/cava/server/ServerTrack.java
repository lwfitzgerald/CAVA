package cava.server;

import java.io.IOException;
import java.io.Serializable;

import com.google.code.jspot.*;
import cava.*;

public class ServerTrack extends cava.Track implements Serializable {
	
	private static final long serialVersionUID = -2166450509462788733L;
	String artistName;
	String spotifyLink;
	int scmsGroup;
	
	public ServerTrack(int trackID, String trackName,String artistName, byte[] scms){
		this.trackID = trackID;
		this.trackName = trackName;
		this.artistName = artistName;
		this.scms = scms;
	}
	
	ServerTrack(int trackID, String trackName,String artistName, byte[] scms, int scmsGroup){
		this.trackID = trackID;
		this.trackName = trackName;
		this.artistName = artistName;
		this.scms = scms;
		this.scmsGroup = scmsGroup;
	}
	
	ServerTrack(int trackID, String trackName,String artistName, byte[] scms, String spotifyLink){
		this.trackID = trackID;
		this.trackName = trackName;
		this.artistName = artistName;
		this.scms = scms;
		this.spotifyLink = spotifyLink;
	}
	
	public ServerTrack(int trackID, String trackName,String artistName, String spotifyLink, int playlistTrackID){
		this.trackID = trackID;
		this.trackName = trackName;
		this.artistName = artistName;
		this.spotifyLink = spotifyLink;
		this.playlistTrackID = playlistTrackID;
	}

	public String getArtistName(){
		return this.artistName;
	}
	
	public int getScmsGroup(){
		return scmsGroup;
	}
	
	public String getSpotifyLink(){
		return spotifyLink;
	}
	
	
	@Override
	public String getLengthAsString(){
		//Make sure track length has been retrieved from Spotify
		if(trackLength==0){
			getLength();
		}
    	int mins = (int) Math.floor(trackLength/60);
    	int seconds = trackLength % 60;
    	return mins + ":" + ((seconds < 10) ? "0" + seconds : seconds);     
	}
	
	@Override
	public int getLength() {
		if(trackLength != 0){
			return trackLength;
		}else{
			try {
				Spotify spotify;
				spotify = new Spotify();
				spotify.setTimeout(500);
				try{
					Results<com.google.code.jspot.Track> results = spotify.searchTrackByURI(spotifyLink);
		            trackLength = Math.round(results.getItems().get(0).getLength());
		            return trackLength;
				}catch(IOException e){
					//Drop exceptions generated by the JSpot code
				}
			} catch (IOException e) {
				if(Constants.DEBUG){
					e.printStackTrace();
				}
			}
			
		}
		return 0;
	}

	@Override
	public String getArtistName(TrackDatabase db) {
		return this.artistName;
	}
}
